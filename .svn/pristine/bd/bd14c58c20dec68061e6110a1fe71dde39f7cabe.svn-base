/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.istat.sintesi.interpreter.domain;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Collection;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import lombok.Data;

/**
 *
 * @author andrea.pagano
 */
@Data
@Entity
@Table(name = "SM_DATASET")
public class SmDataset implements Serializable {

	private static final long serialVersionUID = 1L;
	// @Max(value=?) @Min(value=?)//if you know range of your decimal fields
	// consider using these annotations to enforce field validation
	@Id
	@SequenceGenerator(name = "ID_SEQ_SM_DATASET", sequenceName = "SEQ_SM_DATASET", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "ID_SEQ_SM_DATASET")
	@Column(name = "id", unique = true, nullable = false)
	@Basic(optional = false)
	private BigDecimal id;

	@Column(name = "TABELLA")
	private String tabella;
	@JoinColumn(name = "TIPO_TABELLA", referencedColumnName = "ID")
	@ManyToOne(optional = false)
	private SmTipoTabella tipoTabella;
	 
	@OneToOne(fetch=FetchType.LAZY, mappedBy="dataset")
	private SmUnit unit;

	@Override
	public int hashCode() {
		int hash = 0;
		hash += (id != null ? id.hashCode() : 0);
		return hash;
	}

	@Override
	public boolean equals(Object object) {
		// TODO: Warning - this method won't work in the case the id fields are not set
		if (!(object instanceof SmDataset)) {
			return false;
		}
		SmDataset other = (SmDataset) object;
		if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
			return false;
		}
		return true;
	}

	@Override
	public String toString() {
		return "it.istat.sintesi.survey.domain.smeta.SmDataset[ id=" + id + " ]";
	}

}
